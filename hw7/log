+ . bashcalc-function.sh
+ RUNNING=0
+ GIVEUP=1
+ CAUGHT=2
+ [[ 4 != 4 ]]
+ state=0
+ step=0
+ cat_angle=0
+ cat_radius=1
+ mouse_radius=0
+ max_steps=20
+ [[ 0 == 0 ]]
++ next_step 0 0 0 1 0 20
++ local state=0
++ local -i step=0
++ local old_cat_angle=0
++ local old_cat_radius=1
++ local old_mouse_angle=0
++ local -i max_steps=20
++ local new_cat_angle=0
++ local new_cat_radius=1
++ local new_mouse_angle=0
++ ((  0 != 0  ))
++ does_cat_see_mouse 0 1 0
++ local catA=0
++ local catL=1
++ local mouseA=0
+++ bashcalc '1 <= 1 * c(0 - 0)'
+++ echo '1 <= 1 * c(0 - 0)'
+++ bc -l
++ test 1 -eq 1
+++ updateCatL 1
+++ local catL=1
++++ bashcalc '1 < 2'
++++ echo '1 < 2'
++++ bc -l
+++ '[' 1 -eq 1 ']'
+++ catL=1
+++ return 0
++ new_cat_radius=
++ is_caught 0 0 0
++ local A=0
++ local B=0
++ local C=0
++ local catL=
+++ bashcalc 'c(0 - 0) > c(0 - 0) && c(0 - 0) > c(0 - 0) &&  == 1'
+++ echo 'c(0 - 0) > c(0 - 0) && c(0 - 0) > c(0 - 0) &&  == 1'
+++ bc -l
(standard_in) 1: parse error
++ test -eq 1
catmouse-fw.sh: line 22: test: -eq: unary operator expected
+++ updateMouseA 0
+++ local mouseA=0
++++ bashcalc '0 - 1'
++++ echo '0 - 1'
++++ bc -l
+++ mouseA=-1
++++ angle_reduce -1
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-1)))'
+++ mouseA=5.28318530718
+++ echo 5.28318530718
++ new_mouse_angle=5.28318530718
++ [[ 0 == 20 ]]
++ step=1
++ echo 0 1 0 5.28318530718 20
++ return 0
+ res='0 1 0 5.28318530718 20'
++ echo 0 1 0 5.28318530718 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 1 0 5.28318530718 20
++ cut -d ' ' -f 2
+ step=1
++ echo 0 1 0 5.28318530718 20
++ cut -d ' ' -f 3
+ cat_angle=0
++ echo 0 1 0 5.28318530718 20
++ cut -d ' ' -f 4
+ cat_radius=5.28318530718
++ echo 0 1 0 5.28318530718 20
++ cut -d ' ' -f 5
+ mouse_radius=20
+ echo 'step: 1, cat angle: 0, cat radius: 5.28318530718, mouse_radius: 20'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 1 0 5.28318530718 20 20
++ local state=0
++ local -i step=1
++ local old_cat_angle=0
++ local old_cat_radius=5.28318530718
++ local old_mouse_angle=20
++ local -i max_steps=20
++ local new_cat_angle=0
++ local new_cat_radius=5.28318530718
++ local new_mouse_angle=20
++ ((  0 != 0  ))
++ does_cat_see_mouse 0 5.28318530718 20
++ local catA=0
++ local catL=5.28318530718
++ local mouseA=20
+++ bashcalc '1 <= 5.28318530718 * c(0 - 20)'
+++ echo '1 <= 5.28318530718 * c(0 - 20)'
+++ bc -l
++ test 1 -eq 1
+++ updateCatL 5.28318530718
+++ local catL=5.28318530718
++++ bashcalc '5.28318530718 < 2'
++++ echo '5.28318530718 < 2'
++++ bc -l
+++ '[' 0 -eq 1 ']'
++++ bashcalc '5.28318530718 - 1'
++++ echo '5.28318530718 - 1'
++++ bc -l
+++ catL=4.28318530718
+++ echo 4.28318530718
++ new_cat_radius=4.28318530718
++ is_caught 0 20 0 4.28318530718
++ local A=0
++ local B=20
++ local C=0
++ local catL=4.28318530718
+++ bashcalc 'c(20 - 0) > c(0 - 0) && c(0 - 20) > c(0 - 0) && 4.28318530718 == 1'
+++ echo 'c(20 - 0) > c(0 - 0) && c(0 - 20) > c(0 - 0) && 4.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 20
+++ local mouseA=20
++++ bashcalc '20 - 1'
++++ echo '20 - 1'
++++ bc -l
+++ mouseA=19
++++ angle_reduce 19
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(19)))'
+++ mouseA=0.150444078461
+++ echo 0.150444078461
++ new_mouse_angle=0.150444078461
++ [[ 1 == 20 ]]
++ step=2
++ echo 0 2 0 4.28318530718 0.150444078461 20
++ return 0
+ res='0 2 0 4.28318530718 0.150444078461 20'
++ echo 0 2 0 4.28318530718 0.150444078461 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 2 0 4.28318530718 0.150444078461 20
++ cut -d ' ' -f 2
+ step=2
++ echo 0 2 0 4.28318530718 0.150444078461 20
++ cut -d ' ' -f 3
+ cat_angle=0
++ echo 0 2 0 4.28318530718 0.150444078461 20
++ cut -d ' ' -f 4
+ cat_radius=4.28318530718
++ echo 0 2 0 4.28318530718 0.150444078461 20
++ cut -d ' ' -f 5
+ mouse_radius=0.150444078461
+ echo 'step: 2, cat angle: 0, cat radius: 4.28318530718, mouse_radius: 0.150444078461'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 2 0 4.28318530718 0.150444078461 20
++ local state=0
++ local -i step=2
++ local old_cat_angle=0
++ local old_cat_radius=4.28318530718
++ local old_mouse_angle=0.150444078461
++ local -i max_steps=20
++ local new_cat_angle=0
++ local new_cat_radius=4.28318530718
++ local new_mouse_angle=0.150444078461
++ ((  0 != 0  ))
++ does_cat_see_mouse 0 4.28318530718 0.150444078461
++ local catA=0
++ local catL=4.28318530718
++ local mouseA=0.150444078461
+++ bashcalc '1 <= 4.28318530718 * c(0 - 0.150444078461)'
+++ echo '1 <= 4.28318530718 * c(0 - 0.150444078461)'
+++ bc -l
++ test 1 -eq 1
+++ updateCatL 4.28318530718
+++ local catL=4.28318530718
++++ bashcalc '4.28318530718 < 2'
++++ echo '4.28318530718 < 2'
++++ bc -l
+++ '[' 0 -eq 1 ']'
++++ bashcalc '4.28318530718 - 1'
++++ bc -l
++++ echo '4.28318530718 - 1'
+++ catL=3.28318530718
+++ echo 3.28318530718
++ new_cat_radius=3.28318530718
++ is_caught 0 0.150444078461 0 3.28318530718
++ local A=0
++ local B=0.150444078461
++ local C=0
++ local catL=3.28318530718
+++ bashcalc 'c(0.150444078461 - 0) > c(0 - 0) && c(0 - 0.150444078461) > c(0 - 0) && 3.28318530718 == 1'
+++ echo 'c(0.150444078461 - 0) > c(0 - 0) && c(0 - 0.150444078461) > c(0 - 0) && 3.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 0.150444078461
+++ local mouseA=0.150444078461
++++ bashcalc '0.150444078461 - 1'
++++ echo '0.150444078461 - 1'
++++ bc -l
+++ mouseA=-.849555921539
++++ angle_reduce -.849555921539
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-.849555921539)))'
+++ mouseA=5.43362938564
+++ echo 5.43362938564
++ new_mouse_angle=5.43362938564
++ [[ 2 == 20 ]]
++ step=3
++ echo 0 3 0 3.28318530718 5.43362938564 20
++ return 0
+ res='0 3 0 3.28318530718 5.43362938564 20'
++ echo 0 3 0 3.28318530718 5.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 3 0 3.28318530718 5.43362938564 20
++ cut -d ' ' -f 2
+ step=3
++ echo 0 3 0 3.28318530718 5.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=0
++ echo 0 3 0 3.28318530718 5.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=3.28318530718
++ echo 0 3 0 3.28318530718 5.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=5.43362938564
+ echo 'step: 3, cat angle: 0, cat radius: 3.28318530718, mouse_radius: 5.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 3 0 3.28318530718 5.43362938564 20
++ local state=0
++ local -i step=3
++ local old_cat_angle=0
++ local old_cat_radius=3.28318530718
++ local old_mouse_angle=5.43362938564
++ local -i max_steps=20
++ local new_cat_angle=0
++ local new_cat_radius=3.28318530718
++ local new_mouse_angle=5.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 0 3.28318530718 5.43362938564
++ local catA=0
++ local catL=3.28318530718
++ local mouseA=5.43362938564
+++ bashcalc '1 <= 3.28318530718 * c(0 - 5.43362938564)'
+++ echo '1 <= 3.28318530718 * c(0 - 5.43362938564)'
+++ bc -l
++ test 1 -eq 1
+++ updateCatL 3.28318530718
+++ local catL=3.28318530718
++++ bashcalc '3.28318530718 < 2'
++++ echo '3.28318530718 < 2'
++++ bc -l
+++ '[' 0 -eq 1 ']'
++++ bashcalc '3.28318530718 - 1'
++++ echo '3.28318530718 - 1'
++++ bc -l
+++ catL=2.28318530718
+++ echo 2.28318530718
++ new_cat_radius=2.28318530718
++ is_caught 0 5.43362938564 0 2.28318530718
++ local A=0
++ local B=5.43362938564
++ local C=0
++ local catL=2.28318530718
+++ bashcalc 'c(5.43362938564 - 0) > c(0 - 0) && c(0 - 5.43362938564) > c(0 - 0) && 2.28318530718 == 1'
+++ echo 'c(5.43362938564 - 0) > c(0 - 0) && c(0 - 5.43362938564) > c(0 - 0) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 5.43362938564
+++ local mouseA=5.43362938564
++++ bashcalc '5.43362938564 - 1'
++++ echo '5.43362938564 - 1'
++++ bc -l
+++ mouseA=4.43362938564
++++ angle_reduce 4.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(4.43362938564)))'
+++ mouseA=4.43362938564
+++ echo 4.43362938564
++ new_mouse_angle=4.43362938564
++ [[ 3 == 20 ]]
++ step=4
++ echo 0 4 0 2.28318530718 4.43362938564 20
++ return 0
+ res='0 4 0 2.28318530718 4.43362938564 20'
++ echo 0 4 0 2.28318530718 4.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 4 0 2.28318530718 4.43362938564 20
++ cut -d ' ' -f 2
+ step=4
++ echo 0 4 0 2.28318530718 4.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=0
++ echo 0 4 0 2.28318530718 4.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 4 0 2.28318530718 4.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=4.43362938564
+ echo 'step: 4, cat angle: 0, cat radius: 2.28318530718, mouse_radius: 4.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 4 0 2.28318530718 4.43362938564 20
++ local state=0
++ local -i step=4
++ local old_cat_angle=0
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=4.43362938564
++ local -i max_steps=20
++ local new_cat_angle=0
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=4.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 0 2.28318530718 4.43362938564
++ local catA=0
++ local catL=2.28318530718
++ local mouseA=4.43362938564
+++ bashcalc '1 <= 2.28318530718 * c(0 - 4.43362938564)'
+++ echo '1 <= 2.28318530718 * c(0 - 4.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 0 2.28318530718
+++ local catA=0
+++ local catL=2.28318530718
++++ bashcalc '0 - 1.25 / 2.28318530718'
++++ echo '0 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=-.54748074808868479869
++++ angle_reduce -.54748074808868479869
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-.54748074808868479869)))'
+++ catA=5.73570455909
+++ echo 5.73570455909
++ new_cat_angle=5.73570455909
++ is_caught 0 4.43362938564 5.73570455909 2.28318530718
++ local A=0
++ local B=4.43362938564
++ local C=5.73570455909
++ local catL=2.28318530718
+++ bashcalc 'c(4.43362938564 - 0) > c(5.73570455909 - 0) && c(5.73570455909 - 4.43362938564) > c(5.73570455909 - 0) && 2.28318530718 == 1'
+++ echo 'c(4.43362938564 - 0) > c(5.73570455909 - 0) && c(5.73570455909 - 4.43362938564) > c(5.73570455909 - 0) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 4.43362938564
+++ local mouseA=4.43362938564
++++ bashcalc '4.43362938564 - 1'
++++ echo '4.43362938564 - 1'
++++ bc -l
+++ mouseA=3.43362938564
++++ angle_reduce 3.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(3.43362938564)))'
+++ mouseA=3.43362938564
+++ echo 3.43362938564
++ new_mouse_angle=3.43362938564
++ [[ 4 == 20 ]]
++ step=5
++ echo 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ return 0
+ res='0 5 5.73570455909 2.28318530718 3.43362938564 20'
++ echo 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ cut -d ' ' -f 2
+ step=5
++ echo 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=5.73570455909
++ echo 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=3.43362938564
+ echo 'step: 5, cat angle: 5.73570455909, cat radius: 2.28318530718, mouse_radius: 3.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 5 5.73570455909 2.28318530718 3.43362938564 20
++ local state=0
++ local -i step=5
++ local old_cat_angle=5.73570455909
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=3.43362938564
++ local -i max_steps=20
++ local new_cat_angle=5.73570455909
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=3.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 5.73570455909 2.28318530718 3.43362938564
++ local catA=5.73570455909
++ local catL=2.28318530718
++ local mouseA=3.43362938564
+++ bashcalc '1 <= 2.28318530718 * c(5.73570455909 - 3.43362938564)'
+++ echo '1 <= 2.28318530718 * c(5.73570455909 - 3.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 5.73570455909 2.28318530718
+++ local catA=5.73570455909
+++ local catL=2.28318530718
++++ bashcalc '5.73570455909 - 1.25 / 2.28318530718'
++++ echo '5.73570455909 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=5.18822381100131520131
++++ angle_reduce 5.18822381100131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(5.18822381100131520131)))'
+++ catA=5.188223811
+++ echo 5.188223811
++ new_cat_angle=5.188223811
++ is_caught 5.73570455909 3.43362938564 5.188223811 2.28318530718
++ local A=5.73570455909
++ local B=3.43362938564
++ local C=5.188223811
++ local catL=2.28318530718
+++ bashcalc 'c(3.43362938564 - 5.73570455909) > c(5.188223811 - 5.73570455909) && c(5.188223811 - 3.43362938564) > c(5.188223811 - 5.73570455909) && 2.28318530718 == 1'
+++ echo 'c(3.43362938564 - 5.73570455909) > c(5.188223811 - 5.73570455909) && c(5.188223811 - 3.43362938564) > c(5.188223811 - 5.73570455909) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 3.43362938564
+++ local mouseA=3.43362938564
++++ bashcalc '3.43362938564 - 1'
++++ echo '3.43362938564 - 1'
++++ bc -l
+++ mouseA=2.43362938564
++++ angle_reduce 2.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.43362938564)))'
+++ mouseA=2.43362938564
+++ echo 2.43362938564
++ new_mouse_angle=2.43362938564
++ [[ 5 == 20 ]]
++ step=6
++ echo 0 6 5.188223811 2.28318530718 2.43362938564 20
++ return 0
+ res='0 6 5.188223811 2.28318530718 2.43362938564 20'
++ echo 0 6 5.188223811 2.28318530718 2.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 6 5.188223811 2.28318530718 2.43362938564 20
++ cut -d ' ' -f 2
+ step=6
++ echo 0 6 5.188223811 2.28318530718 2.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=5.188223811
++ echo 0 6 5.188223811 2.28318530718 2.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 6 5.188223811 2.28318530718 2.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=2.43362938564
+ echo 'step: 6, cat angle: 5.188223811, cat radius: 2.28318530718, mouse_radius: 2.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 6 5.188223811 2.28318530718 2.43362938564 20
++ local state=0
++ local -i step=6
++ local old_cat_angle=5.188223811
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=2.43362938564
++ local -i max_steps=20
++ local new_cat_angle=5.188223811
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=2.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 5.188223811 2.28318530718 2.43362938564
++ local catA=5.188223811
++ local catL=2.28318530718
++ local mouseA=2.43362938564
+++ bashcalc '1 <= 2.28318530718 * c(5.188223811 - 2.43362938564)'
+++ echo '1 <= 2.28318530718 * c(5.188223811 - 2.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 5.188223811 2.28318530718
+++ local catA=5.188223811
+++ local catL=2.28318530718
++++ bashcalc '5.188223811 - 1.25 / 2.28318530718'
++++ echo '5.188223811 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=4.64074306291131520131
++++ angle_reduce 4.64074306291131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(4.64074306291131520131)))'
+++ catA=4.64074306291
+++ echo 4.64074306291
++ new_cat_angle=4.64074306291
++ is_caught 5.188223811 2.43362938564 4.64074306291 2.28318530718
++ local A=5.188223811
++ local B=2.43362938564
++ local C=4.64074306291
++ local catL=2.28318530718
+++ bashcalc 'c(2.43362938564 - 5.188223811) > c(4.64074306291 - 5.188223811) && c(4.64074306291 - 2.43362938564) > c(4.64074306291 - 5.188223811) && 2.28318530718 == 1'
+++ echo 'c(2.43362938564 - 5.188223811) > c(4.64074306291 - 5.188223811) && c(4.64074306291 - 2.43362938564) > c(4.64074306291 - 5.188223811) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 2.43362938564
+++ local mouseA=2.43362938564
++++ bashcalc '2.43362938564 - 1'
++++ echo '2.43362938564 - 1'
++++ bc -l
+++ mouseA=1.43362938564
++++ angle_reduce 1.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(1.43362938564)))'
+++ mouseA=1.43362938564
+++ echo 1.43362938564
++ new_mouse_angle=1.43362938564
++ [[ 6 == 20 ]]
++ step=7
++ echo 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ return 0
+ res='0 7 4.64074306291 2.28318530718 1.43362938564 20'
++ echo 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ cut -d ' ' -f 2
+ step=7
++ echo 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=4.64074306291
++ echo 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=1.43362938564
+ echo 'step: 7, cat angle: 4.64074306291, cat radius: 2.28318530718, mouse_radius: 1.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 7 4.64074306291 2.28318530718 1.43362938564 20
++ local state=0
++ local -i step=7
++ local old_cat_angle=4.64074306291
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=1.43362938564
++ local -i max_steps=20
++ local new_cat_angle=4.64074306291
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=1.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 4.64074306291 2.28318530718 1.43362938564
++ local catA=4.64074306291
++ local catL=2.28318530718
++ local mouseA=1.43362938564
+++ bashcalc '1 <= 2.28318530718 * c(4.64074306291 - 1.43362938564)'
+++ echo '1 <= 2.28318530718 * c(4.64074306291 - 1.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 4.64074306291 2.28318530718
+++ local catA=4.64074306291
+++ local catL=2.28318530718
++++ bashcalc '4.64074306291 - 1.25 / 2.28318530718'
++++ echo '4.64074306291 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=4.09326231482131520131
++++ angle_reduce 4.09326231482131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(4.09326231482131520131)))'
+++ catA=4.09326231482
+++ echo 4.09326231482
++ new_cat_angle=4.09326231482
++ is_caught 4.64074306291 1.43362938564 4.09326231482 2.28318530718
++ local A=4.64074306291
++ local B=1.43362938564
++ local C=4.09326231482
++ local catL=2.28318530718
+++ bashcalc 'c(1.43362938564 - 4.64074306291) > c(4.09326231482 - 4.64074306291) && c(4.09326231482 - 1.43362938564) > c(4.09326231482 - 4.64074306291) && 2.28318530718 == 1'
+++ echo 'c(1.43362938564 - 4.64074306291) > c(4.09326231482 - 4.64074306291) && c(4.09326231482 - 1.43362938564) > c(4.09326231482 - 4.64074306291) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 1.43362938564
+++ local mouseA=1.43362938564
++++ bashcalc '1.43362938564 - 1'
++++ echo '1.43362938564 - 1'
++++ bc -l
+++ mouseA=.43362938564
++++ angle_reduce .43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(.43362938564)))'
+++ mouseA=0.43362938564
+++ echo 0.43362938564
++ new_mouse_angle=0.43362938564
++ [[ 7 == 20 ]]
++ step=8
++ echo 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ return 0
+ res='0 8 4.09326231482 2.28318530718 0.43362938564 20'
++ echo 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ cut -d ' ' -f 2
+ step=8
++ echo 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=4.09326231482
++ echo 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=0.43362938564
+ echo 'step: 8, cat angle: 4.09326231482, cat radius: 2.28318530718, mouse_radius: 0.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 8 4.09326231482 2.28318530718 0.43362938564 20
++ local state=0
++ local -i step=8
++ local old_cat_angle=4.09326231482
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=0.43362938564
++ local -i max_steps=20
++ local new_cat_angle=4.09326231482
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=0.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 4.09326231482 2.28318530718 0.43362938564
++ local catA=4.09326231482
++ local catL=2.28318530718
++ local mouseA=0.43362938564
+++ bashcalc '1 <= 2.28318530718 * c(4.09326231482 - 0.43362938564)'
+++ echo '1 <= 2.28318530718 * c(4.09326231482 - 0.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 4.09326231482 2.28318530718
+++ local catA=4.09326231482
+++ local catL=2.28318530718
++++ bashcalc '4.09326231482 - 1.25 / 2.28318530718'
++++ echo '4.09326231482 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=3.54578156673131520131
++++ angle_reduce 3.54578156673131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(3.54578156673131520131)))'
+++ catA=3.54578156673
+++ echo 3.54578156673
++ new_cat_angle=3.54578156673
++ is_caught 4.09326231482 0.43362938564 3.54578156673 2.28318530718
++ local A=4.09326231482
++ local B=0.43362938564
++ local C=3.54578156673
++ local catL=2.28318530718
+++ bashcalc 'c(0.43362938564 - 4.09326231482) > c(3.54578156673 - 4.09326231482) && c(3.54578156673 - 0.43362938564) > c(3.54578156673 - 4.09326231482) && 2.28318530718 == 1'
+++ echo 'c(0.43362938564 - 4.09326231482) > c(3.54578156673 - 4.09326231482) && c(3.54578156673 - 0.43362938564) > c(3.54578156673 - 4.09326231482) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 0.43362938564
+++ local mouseA=0.43362938564
++++ bashcalc '0.43362938564 - 1'
++++ echo '0.43362938564 - 1'
++++ bc -l
+++ mouseA=-.56637061436
++++ angle_reduce -.56637061436
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-.56637061436)))'
+++ mouseA=5.71681469282
+++ echo 5.71681469282
++ new_mouse_angle=5.71681469282
++ [[ 8 == 20 ]]
++ step=9
++ echo 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ return 0
+ res='0 9 3.54578156673 2.28318530718 5.71681469282 20'
++ echo 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ cut -d ' ' -f 2
+ step=9
++ echo 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ cut -d ' ' -f 3
+ cat_angle=3.54578156673
++ echo 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ cut -d ' ' -f 5
+ mouse_radius=5.71681469282
+ echo 'step: 9, cat angle: 3.54578156673, cat radius: 2.28318530718, mouse_radius: 5.71681469282'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 9 3.54578156673 2.28318530718 5.71681469282 20
++ local state=0
++ local -i step=9
++ local old_cat_angle=3.54578156673
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=5.71681469282
++ local -i max_steps=20
++ local new_cat_angle=3.54578156673
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=5.71681469282
++ ((  0 != 0  ))
++ does_cat_see_mouse 3.54578156673 2.28318530718 5.71681469282
++ local catA=3.54578156673
++ local catL=2.28318530718
++ local mouseA=5.71681469282
+++ bashcalc '1 <= 2.28318530718 * c(3.54578156673 - 5.71681469282)'
+++ echo '1 <= 2.28318530718 * c(3.54578156673 - 5.71681469282)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 3.54578156673 2.28318530718
+++ local catA=3.54578156673
+++ local catL=2.28318530718
++++ bashcalc '3.54578156673 - 1.25 / 2.28318530718'
++++ echo '3.54578156673 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=2.99830081864131520131
++++ angle_reduce 2.99830081864131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.99830081864131520131)))'
+++ catA=2.99830081864
+++ echo 2.99830081864
++ new_cat_angle=2.99830081864
++ is_caught 3.54578156673 5.71681469282 2.99830081864 2.28318530718
++ local A=3.54578156673
++ local B=5.71681469282
++ local C=2.99830081864
++ local catL=2.28318530718
+++ bashcalc 'c(5.71681469282 - 3.54578156673) > c(2.99830081864 - 3.54578156673) && c(2.99830081864 - 5.71681469282) > c(2.99830081864 - 3.54578156673) && 2.28318530718 == 1'
+++ echo 'c(5.71681469282 - 3.54578156673) > c(2.99830081864 - 3.54578156673) && c(2.99830081864 - 5.71681469282) > c(2.99830081864 - 3.54578156673) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 5.71681469282
+++ local mouseA=5.71681469282
++++ bashcalc '5.71681469282 - 1'
++++ echo '5.71681469282 - 1'
++++ bc -l
+++ mouseA=4.71681469282
++++ angle_reduce 4.71681469282
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(4.71681469282)))'
+++ mouseA=4.71681469282
+++ echo 4.71681469282
++ new_mouse_angle=4.71681469282
++ [[ 9 == 20 ]]
++ step=10
++ echo 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ return 0
+ res='0 10 2.99830081864 2.28318530718 4.71681469282 20'
++ echo 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ cut -d ' ' -f 2
+ step=10
++ echo 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ cut -d ' ' -f 3
+ cat_angle=2.99830081864
++ echo 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ cut -d ' ' -f 5
+ mouse_radius=4.71681469282
+ echo 'step: 10, cat angle: 2.99830081864, cat radius: 2.28318530718, mouse_radius: 4.71681469282'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 10 2.99830081864 2.28318530718 4.71681469282 20
++ local state=0
++ local -i step=10
++ local old_cat_angle=2.99830081864
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=4.71681469282
++ local -i max_steps=20
++ local new_cat_angle=2.99830081864
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=4.71681469282
++ ((  0 != 0  ))
++ does_cat_see_mouse 2.99830081864 2.28318530718 4.71681469282
++ local catA=2.99830081864
++ local catL=2.28318530718
++ local mouseA=4.71681469282
+++ bashcalc '1 <= 2.28318530718 * c(2.99830081864 - 4.71681469282)'
+++ echo '1 <= 2.28318530718 * c(2.99830081864 - 4.71681469282)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 2.99830081864 2.28318530718
+++ local catA=2.99830081864
+++ local catL=2.28318530718
++++ bashcalc '2.99830081864 - 1.25 / 2.28318530718'
++++ echo '2.99830081864 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=2.45082007055131520131
++++ angle_reduce 2.45082007055131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.45082007055131520131)))'
+++ catA=2.45082007055
+++ echo 2.45082007055
++ new_cat_angle=2.45082007055
++ is_caught 2.99830081864 4.71681469282 2.45082007055 2.28318530718
++ local A=2.99830081864
++ local B=4.71681469282
++ local C=2.45082007055
++ local catL=2.28318530718
+++ bashcalc 'c(4.71681469282 - 2.99830081864) > c(2.45082007055 - 2.99830081864) && c(2.45082007055 - 4.71681469282) > c(2.45082007055 - 2.99830081864) && 2.28318530718 == 1'
+++ echo 'c(4.71681469282 - 2.99830081864) > c(2.45082007055 - 2.99830081864) && c(2.45082007055 - 4.71681469282) > c(2.45082007055 - 2.99830081864) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 4.71681469282
+++ local mouseA=4.71681469282
++++ bashcalc '4.71681469282 - 1'
++++ echo '4.71681469282 - 1'
++++ bc -l
+++ mouseA=3.71681469282
++++ angle_reduce 3.71681469282
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(3.71681469282)))'
+++ mouseA=3.71681469282
+++ echo 3.71681469282
++ new_mouse_angle=3.71681469282
++ [[ 10 == 20 ]]
++ step=11
++ echo 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ return 0
+ res='0 11 2.45082007055 2.28318530718 3.71681469282 20'
++ echo 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ cut -d ' ' -f 2
+ step=11
++ echo 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ cut -d ' ' -f 3
+ cat_angle=2.45082007055
++ echo 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ cut -d ' ' -f 5
+ mouse_radius=3.71681469282
+ echo 'step: 11, cat angle: 2.45082007055, cat radius: 2.28318530718, mouse_radius: 3.71681469282'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 11 2.45082007055 2.28318530718 3.71681469282 20
++ local state=0
++ local -i step=11
++ local old_cat_angle=2.45082007055
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=3.71681469282
++ local -i max_steps=20
++ local new_cat_angle=2.45082007055
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=3.71681469282
++ ((  0 != 0  ))
++ does_cat_see_mouse 2.45082007055 2.28318530718 3.71681469282
++ local catA=2.45082007055
++ local catL=2.28318530718
++ local mouseA=3.71681469282
+++ bashcalc '1 <= 2.28318530718 * c(2.45082007055 - 3.71681469282)'
+++ echo '1 <= 2.28318530718 * c(2.45082007055 - 3.71681469282)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 2.45082007055 2.28318530718
+++ local catA=2.45082007055
+++ local catL=2.28318530718
++++ bashcalc '2.45082007055 - 1.25 / 2.28318530718'
++++ echo '2.45082007055 - 1.25 / 2.28318530718'
++++ bc -l
+++ catA=1.90333932246131520131
++++ angle_reduce 1.90333932246131520131
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(1.90333932246131520131)))'
+++ catA=1.90333932246
+++ echo 1.90333932246
++ new_cat_angle=1.90333932246
++ is_caught 2.45082007055 3.71681469282 1.90333932246 2.28318530718
++ local A=2.45082007055
++ local B=3.71681469282
++ local C=1.90333932246
++ local catL=2.28318530718
+++ bashcalc 'c(3.71681469282 - 2.45082007055) > c(1.90333932246 - 2.45082007055) && c(1.90333932246 - 3.71681469282) > c(1.90333932246 - 2.45082007055) && 2.28318530718 == 1'
+++ echo 'c(3.71681469282 - 2.45082007055) > c(1.90333932246 - 2.45082007055) && c(1.90333932246 - 3.71681469282) > c(1.90333932246 - 2.45082007055) && 2.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 3.71681469282
+++ local mouseA=3.71681469282
++++ bashcalc '3.71681469282 - 1'
++++ echo '3.71681469282 - 1'
++++ bc -l
+++ mouseA=2.71681469282
++++ angle_reduce 2.71681469282
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.71681469282)))'
+++ mouseA=2.71681469282
+++ echo 2.71681469282
++ new_mouse_angle=2.71681469282
++ [[ 11 == 20 ]]
++ step=12
++ echo 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ return 0
+ res='0 12 1.90333932246 2.28318530718 2.71681469282 20'
++ echo 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ cut -d ' ' -f 2
+ step=12
++ echo 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ cut -d ' ' -f 3
+ cat_angle=1.90333932246
++ echo 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ cut -d ' ' -f 4
+ cat_radius=2.28318530718
++ echo 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ cut -d ' ' -f 5
+ mouse_radius=2.71681469282
+ echo 'step: 12, cat angle: 1.90333932246, cat radius: 2.28318530718, mouse_radius: 2.71681469282'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 12 1.90333932246 2.28318530718 2.71681469282 20
++ local state=0
++ local -i step=12
++ local old_cat_angle=1.90333932246
++ local old_cat_radius=2.28318530718
++ local old_mouse_angle=2.71681469282
++ local -i max_steps=20
++ local new_cat_angle=1.90333932246
++ local new_cat_radius=2.28318530718
++ local new_mouse_angle=2.71681469282
++ ((  0 != 0  ))
++ does_cat_see_mouse 1.90333932246 2.28318530718 2.71681469282
++ local catA=1.90333932246
++ local catL=2.28318530718
++ local mouseA=2.71681469282
+++ bashcalc '1 <= 2.28318530718 * c(1.90333932246 - 2.71681469282)'
+++ echo '1 <= 2.28318530718 * c(1.90333932246 - 2.71681469282)'
+++ bc -l
++ test 1 -eq 1
+++ updateCatL 2.28318530718
+++ local catL=2.28318530718
++++ bashcalc '2.28318530718 < 2'
++++ echo '2.28318530718 < 2'
++++ bc -l
+++ '[' 0 -eq 1 ']'
++++ bashcalc '2.28318530718 - 1'
++++ echo '2.28318530718 - 1'
++++ bc -l
+++ catL=1.28318530718
+++ echo 1.28318530718
++ new_cat_radius=1.28318530718
++ is_caught 1.90333932246 2.71681469282 1.90333932246 1.28318530718
++ local A=1.90333932246
++ local B=2.71681469282
++ local C=1.90333932246
++ local catL=1.28318530718
+++ bashcalc 'c(2.71681469282 - 1.90333932246) > c(1.90333932246 - 1.90333932246) && c(1.90333932246 - 2.71681469282) > c(1.90333932246 - 1.90333932246) && 1.28318530718 == 1'
+++ echo 'c(2.71681469282 - 1.90333932246) > c(1.90333932246 - 1.90333932246) && c(1.90333932246 - 2.71681469282) > c(1.90333932246 - 1.90333932246) && 1.28318530718 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 2.71681469282
+++ local mouseA=2.71681469282
++++ bashcalc '2.71681469282 - 1'
++++ echo '2.71681469282 - 1'
++++ bc -l
+++ mouseA=1.71681469282
++++ angle_reduce 1.71681469282
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(1.71681469282)))'
+++ mouseA=1.71681469282
+++ echo 1.71681469282
++ new_mouse_angle=1.71681469282
++ [[ 12 == 20 ]]
++ step=13
++ echo 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ return 0
+ res='0 13 1.90333932246 1.28318530718 1.71681469282 20'
++ echo 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ cut -d ' ' -f 2
+ step=13
++ echo 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ cut -d ' ' -f 3
+ cat_angle=1.90333932246
++ echo 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ cut -d ' ' -f 4
+ cat_radius=1.28318530718
++ echo 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ cut -d ' ' -f 5
+ mouse_radius=1.71681469282
+ echo 'step: 13, cat angle: 1.90333932246, cat radius: 1.28318530718, mouse_radius: 1.71681469282'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 13 1.90333932246 1.28318530718 1.71681469282 20
++ local state=0
++ local -i step=13
++ local old_cat_angle=1.90333932246
++ local old_cat_radius=1.28318530718
++ local old_mouse_angle=1.71681469282
++ local -i max_steps=20
++ local new_cat_angle=1.90333932246
++ local new_cat_radius=1.28318530718
++ local new_mouse_angle=1.71681469282
++ ((  0 != 0  ))
++ does_cat_see_mouse 1.90333932246 1.28318530718 1.71681469282
++ local catA=1.90333932246
++ local catL=1.28318530718
++ local mouseA=1.71681469282
+++ bashcalc '1 <= 1.28318530718 * c(1.90333932246 - 1.71681469282)'
+++ echo '1 <= 1.28318530718 * c(1.90333932246 - 1.71681469282)'
+++ bc -l
++ test 1 -eq 1
+++ updateCatL 1.28318530718
+++ local catL=1.28318530718
++++ bashcalc '1.28318530718 < 2'
++++ echo '1.28318530718 < 2'
++++ bc -l
+++ '[' 1 -eq 1 ']'
+++ catL=1
+++ return 0
++ new_cat_radius=
++ is_caught 1.90333932246 1.71681469282 1.90333932246
++ local A=1.90333932246
++ local B=1.71681469282
++ local C=1.90333932246
++ local catL=
+++ bashcalc 'c(1.71681469282 - 1.90333932246) > c(1.90333932246 - 1.90333932246) && c(1.90333932246 - 1.71681469282) > c(1.90333932246 - 1.90333932246) &&  == 1'
+++ echo 'c(1.71681469282 - 1.90333932246) > c(1.90333932246 - 1.90333932246) && c(1.90333932246 - 1.71681469282) > c(1.90333932246 - 1.90333932246) &&  == 1'
+++ bc -l
(standard_in) 1: parse error
++ test -eq 1
catmouse-fw.sh: line 22: test: -eq: unary operator expected
+++ updateMouseA 1.71681469282
+++ local mouseA=1.71681469282
++++ bashcalc '1.71681469282 - 1'
++++ echo '1.71681469282 - 1'
++++ bc -l
+++ mouseA=.71681469282
++++ angle_reduce .71681469282
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(.71681469282)))'
+++ mouseA=0.71681469282
+++ echo 0.71681469282
++ new_mouse_angle=0.71681469282
++ [[ 13 == 20 ]]
++ step=14
++ echo 0 14 1.90333932246 0.71681469282 20
++ return 0
+ res='0 14 1.90333932246 0.71681469282 20'
++ echo 0 14 1.90333932246 0.71681469282 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 14 1.90333932246 0.71681469282 20
++ cut -d ' ' -f 2
+ step=14
++ echo 0 14 1.90333932246 0.71681469282 20
++ cut -d ' ' -f 3
+ cat_angle=1.90333932246
++ echo 0 14 1.90333932246 0.71681469282 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 14 1.90333932246 0.71681469282 20
++ cut -d ' ' -f 5
+ mouse_radius=20
+ echo 'step: 14, cat angle: 1.90333932246, cat radius: 0.71681469282, mouse_radius: 20'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 14 1.90333932246 0.71681469282 20 20
++ local state=0
++ local -i step=14
++ local old_cat_angle=1.90333932246
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=20
++ local -i max_steps=20
++ local new_cat_angle=1.90333932246
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=20
++ ((  0 != 0  ))
++ does_cat_see_mouse 1.90333932246 0.71681469282 20
++ local catA=1.90333932246
++ local catL=0.71681469282
++ local mouseA=20
+++ bashcalc '1 <= 0.71681469282 * c(1.90333932246 - 20)'
+++ echo '1 <= 0.71681469282 * c(1.90333932246 - 20)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 1.90333932246 0.71681469282
+++ local catA=1.90333932246
+++ local catL=0.71681469282
++++ bashcalc '1.90333932246 - 1.25 / 0.71681469282'
++++ echo '1.90333932246 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=.15951345990351267747
++++ angle_reduce .15951345990351267747
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(.15951345990351267747)))'
+++ catA=0.159513459904
+++ echo 0.159513459904
++ new_cat_angle=0.159513459904
++ is_caught 1.90333932246 20 0.159513459904 0.71681469282
++ local A=1.90333932246
++ local B=20
++ local C=0.159513459904
++ local catL=0.71681469282
+++ bashcalc 'c(20 - 1.90333932246) > c(0.159513459904 - 1.90333932246) && c(0.159513459904 - 20) > c(0.159513459904 - 1.90333932246) && 0.71681469282 == 1'
+++ echo 'c(20 - 1.90333932246) > c(0.159513459904 - 1.90333932246) && c(0.159513459904 - 20) > c(0.159513459904 - 1.90333932246) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 20
+++ local mouseA=20
++++ bashcalc '20 - 1'
++++ echo '20 - 1'
++++ bc -l
+++ mouseA=19
++++ angle_reduce 19
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(19)))'
+++ mouseA=0.150444078461
+++ echo 0.150444078461
++ new_mouse_angle=0.150444078461
++ [[ 14 == 20 ]]
++ step=15
++ echo 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ return 0
+ res='0 15 0.159513459904 0.71681469282 0.150444078461 20'
++ echo 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ cut -d ' ' -f 2
+ step=15
++ echo 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ cut -d ' ' -f 3
+ cat_angle=0.159513459904
++ echo 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ cut -d ' ' -f 5
+ mouse_radius=0.150444078461
+ echo 'step: 15, cat angle: 0.159513459904, cat radius: 0.71681469282, mouse_radius: 0.150444078461'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 15 0.159513459904 0.71681469282 0.150444078461 20
++ local state=0
++ local -i step=15
++ local old_cat_angle=0.159513459904
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=0.150444078461
++ local -i max_steps=20
++ local new_cat_angle=0.159513459904
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=0.150444078461
++ ((  0 != 0  ))
++ does_cat_see_mouse 0.159513459904 0.71681469282 0.150444078461
++ local catA=0.159513459904
++ local catL=0.71681469282
++ local mouseA=0.150444078461
+++ bashcalc '1 <= 0.71681469282 * c(0.159513459904 - 0.150444078461)'
+++ echo '1 <= 0.71681469282 * c(0.159513459904 - 0.150444078461)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 0.159513459904 0.71681469282
+++ local catA=0.159513459904
+++ local catL=0.71681469282
++++ bashcalc '0.159513459904 - 1.25 / 0.71681469282'
++++ echo '0.159513459904 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=-1.58431240265248732253
++++ angle_reduce -1.58431240265248732253
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-1.58431240265248732253)))'
+++ catA=4.69887290453
+++ echo 4.69887290453
++ new_cat_angle=4.69887290453
++ is_caught 0.159513459904 0.150444078461 4.69887290453 0.71681469282
++ local A=0.159513459904
++ local B=0.150444078461
++ local C=4.69887290453
++ local catL=0.71681469282
+++ bashcalc 'c(0.150444078461 - 0.159513459904) > c(4.69887290453 - 0.159513459904) && c(4.69887290453 - 0.150444078461) > c(4.69887290453 - 0.159513459904) && 0.71681469282 == 1'
+++ echo 'c(0.150444078461 - 0.159513459904) > c(4.69887290453 - 0.159513459904) && c(4.69887290453 - 0.150444078461) > c(4.69887290453 - 0.159513459904) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 0.150444078461
+++ local mouseA=0.150444078461
++++ bashcalc '0.150444078461 - 1'
++++ echo '0.150444078461 - 1'
++++ bc -l
+++ mouseA=-.849555921539
++++ angle_reduce -.849555921539
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-.849555921539)))'
+++ mouseA=5.43362938564
+++ echo 5.43362938564
++ new_mouse_angle=5.43362938564
++ [[ 15 == 20 ]]
++ step=16
++ echo 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ return 0
+ res='0 16 4.69887290453 0.71681469282 5.43362938564 20'
++ echo 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ cut -d ' ' -f 2
+ step=16
++ echo 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=4.69887290453
++ echo 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=5.43362938564
+ echo 'step: 16, cat angle: 4.69887290453, cat radius: 0.71681469282, mouse_radius: 5.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 16 4.69887290453 0.71681469282 5.43362938564 20
++ local state=0
++ local -i step=16
++ local old_cat_angle=4.69887290453
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=5.43362938564
++ local -i max_steps=20
++ local new_cat_angle=4.69887290453
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=5.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 4.69887290453 0.71681469282 5.43362938564
++ local catA=4.69887290453
++ local catL=0.71681469282
++ local mouseA=5.43362938564
+++ bashcalc '1 <= 0.71681469282 * c(4.69887290453 - 5.43362938564)'
+++ echo '1 <= 0.71681469282 * c(4.69887290453 - 5.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 4.69887290453 0.71681469282
+++ local catA=4.69887290453
+++ local catL=0.71681469282
++++ bashcalc '4.69887290453 - 1.25 / 0.71681469282'
++++ echo '4.69887290453 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=2.95504704197351267747
++++ angle_reduce 2.95504704197351267747
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.95504704197351267747)))'
+++ catA=2.95504704197
+++ echo 2.95504704197
++ new_cat_angle=2.95504704197
++ is_caught 4.69887290453 5.43362938564 2.95504704197 0.71681469282
++ local A=4.69887290453
++ local B=5.43362938564
++ local C=2.95504704197
++ local catL=0.71681469282
+++ bashcalc 'c(5.43362938564 - 4.69887290453) > c(2.95504704197 - 4.69887290453) && c(2.95504704197 - 5.43362938564) > c(2.95504704197 - 4.69887290453) && 0.71681469282 == 1'
+++ echo 'c(5.43362938564 - 4.69887290453) > c(2.95504704197 - 4.69887290453) && c(2.95504704197 - 5.43362938564) > c(2.95504704197 - 4.69887290453) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 5.43362938564
+++ local mouseA=5.43362938564
++++ bashcalc '5.43362938564 - 1'
++++ echo '5.43362938564 - 1'
++++ bc -l
+++ mouseA=4.43362938564
++++ angle_reduce 4.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(4.43362938564)))'
+++ mouseA=4.43362938564
+++ echo 4.43362938564
++ new_mouse_angle=4.43362938564
++ [[ 16 == 20 ]]
++ step=17
++ echo 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ return 0
+ res='0 17 2.95504704197 0.71681469282 4.43362938564 20'
++ echo 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ cut -d ' ' -f 2
+ step=17
++ echo 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=2.95504704197
++ echo 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=4.43362938564
+ echo 'step: 17, cat angle: 2.95504704197, cat radius: 0.71681469282, mouse_radius: 4.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 17 2.95504704197 0.71681469282 4.43362938564 20
++ local state=0
++ local -i step=17
++ local old_cat_angle=2.95504704197
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=4.43362938564
++ local -i max_steps=20
++ local new_cat_angle=2.95504704197
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=4.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 2.95504704197 0.71681469282 4.43362938564
++ local catA=2.95504704197
++ local catL=0.71681469282
++ local mouseA=4.43362938564
+++ bashcalc '1 <= 0.71681469282 * c(2.95504704197 - 4.43362938564)'
+++ echo '1 <= 0.71681469282 * c(2.95504704197 - 4.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 2.95504704197 0.71681469282
+++ local catA=2.95504704197
+++ local catL=0.71681469282
++++ bashcalc '2.95504704197 - 1.25 / 0.71681469282'
++++ echo '2.95504704197 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=1.21122117941351267747
++++ angle_reduce 1.21122117941351267747
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(1.21122117941351267747)))'
+++ catA=1.21122117941
+++ echo 1.21122117941
++ new_cat_angle=1.21122117941
++ is_caught 2.95504704197 4.43362938564 1.21122117941 0.71681469282
++ local A=2.95504704197
++ local B=4.43362938564
++ local C=1.21122117941
++ local catL=0.71681469282
+++ bashcalc 'c(4.43362938564 - 2.95504704197) > c(1.21122117941 - 2.95504704197) && c(1.21122117941 - 4.43362938564) > c(1.21122117941 - 2.95504704197) && 0.71681469282 == 1'
+++ echo 'c(4.43362938564 - 2.95504704197) > c(1.21122117941 - 2.95504704197) && c(1.21122117941 - 4.43362938564) > c(1.21122117941 - 2.95504704197) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 4.43362938564
+++ local mouseA=4.43362938564
++++ bashcalc '4.43362938564 - 1'
++++ echo '4.43362938564 - 1'
++++ bc -l
+++ mouseA=3.43362938564
++++ angle_reduce 3.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(3.43362938564)))'
+++ mouseA=3.43362938564
+++ echo 3.43362938564
++ new_mouse_angle=3.43362938564
++ [[ 17 == 20 ]]
++ step=18
++ echo 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ return 0
+ res='0 18 1.21122117941 0.71681469282 3.43362938564 20'
++ echo 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ cut -d ' ' -f 2
+ step=18
++ echo 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=1.21122117941
++ echo 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=3.43362938564
+ echo 'step: 18, cat angle: 1.21122117941, cat radius: 0.71681469282, mouse_radius: 3.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 18 1.21122117941 0.71681469282 3.43362938564 20
++ local state=0
++ local -i step=18
++ local old_cat_angle=1.21122117941
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=3.43362938564
++ local -i max_steps=20
++ local new_cat_angle=1.21122117941
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=3.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 1.21122117941 0.71681469282 3.43362938564
++ local catA=1.21122117941
++ local catL=0.71681469282
++ local mouseA=3.43362938564
+++ bashcalc '1 <= 0.71681469282 * c(1.21122117941 - 3.43362938564)'
+++ echo '1 <= 0.71681469282 * c(1.21122117941 - 3.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 1.21122117941 0.71681469282
+++ local catA=1.21122117941
+++ local catL=0.71681469282
++++ bashcalc '1.21122117941 - 1.25 / 0.71681469282'
++++ echo '1.21122117941 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=-.53260468314648732253
++++ angle_reduce -.53260468314648732253
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(-.53260468314648732253)))'
+++ catA=5.75058062403
+++ echo 5.75058062403
++ new_cat_angle=5.75058062403
++ is_caught 1.21122117941 3.43362938564 5.75058062403 0.71681469282
++ local A=1.21122117941
++ local B=3.43362938564
++ local C=5.75058062403
++ local catL=0.71681469282
+++ bashcalc 'c(3.43362938564 - 1.21122117941) > c(5.75058062403 - 1.21122117941) && c(5.75058062403 - 3.43362938564) > c(5.75058062403 - 1.21122117941) && 0.71681469282 == 1'
+++ echo 'c(3.43362938564 - 1.21122117941) > c(5.75058062403 - 1.21122117941) && c(5.75058062403 - 3.43362938564) > c(5.75058062403 - 1.21122117941) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 3.43362938564
+++ local mouseA=3.43362938564
++++ bashcalc '3.43362938564 - 1'
++++ echo '3.43362938564 - 1'
++++ bc -l
+++ mouseA=2.43362938564
++++ angle_reduce 2.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.43362938564)))'
+++ mouseA=2.43362938564
+++ echo 2.43362938564
++ new_mouse_angle=2.43362938564
++ [[ 18 == 20 ]]
++ step=19
++ echo 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ return 0
+ res='0 19 5.75058062403 0.71681469282 2.43362938564 20'
++ echo 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ cut -d ' ' -f 2
+ step=19
++ echo 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=5.75058062403
++ echo 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=2.43362938564
+ echo 'step: 19, cat angle: 5.75058062403, cat radius: 0.71681469282, mouse_radius: 2.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 19 5.75058062403 0.71681469282 2.43362938564 20
++ local state=0
++ local -i step=19
++ local old_cat_angle=5.75058062403
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=2.43362938564
++ local -i max_steps=20
++ local new_cat_angle=5.75058062403
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=2.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 5.75058062403 0.71681469282 2.43362938564
++ local catA=5.75058062403
++ local catL=0.71681469282
++ local mouseA=2.43362938564
+++ bashcalc '1 <= 0.71681469282 * c(5.75058062403 - 2.43362938564)'
+++ echo '1 <= 0.71681469282 * c(5.75058062403 - 2.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 5.75058062403 0.71681469282
+++ local catA=5.75058062403
+++ local catL=0.71681469282
++++ bashcalc '5.75058062403 - 1.25 / 0.71681469282'
++++ echo '5.75058062403 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=4.00675476147351267747
++++ angle_reduce 4.00675476147351267747
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(4.00675476147351267747)))'
+++ catA=4.00675476147
+++ echo 4.00675476147
++ new_cat_angle=4.00675476147
++ is_caught 5.75058062403 2.43362938564 4.00675476147 0.71681469282
++ local A=5.75058062403
++ local B=2.43362938564
++ local C=4.00675476147
++ local catL=0.71681469282
+++ bashcalc 'c(2.43362938564 - 5.75058062403) > c(4.00675476147 - 5.75058062403) && c(4.00675476147 - 2.43362938564) > c(4.00675476147 - 5.75058062403) && 0.71681469282 == 1'
+++ echo 'c(2.43362938564 - 5.75058062403) > c(4.00675476147 - 5.75058062403) && c(4.00675476147 - 2.43362938564) > c(4.00675476147 - 5.75058062403) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 2.43362938564
+++ local mouseA=2.43362938564
++++ bashcalc '2.43362938564 - 1'
++++ echo '2.43362938564 - 1'
++++ bc -l
+++ mouseA=1.43362938564
++++ angle_reduce 1.43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(1.43362938564)))'
+++ mouseA=1.43362938564
+++ echo 1.43362938564
++ new_mouse_angle=1.43362938564
++ [[ 19 == 20 ]]
++ step=20
++ echo 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ return 0
+ res='0 20 4.00675476147 0.71681469282 1.43362938564 20'
++ echo 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ cut -d ' ' -f 1
+ state=0
++ echo 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ cut -d ' ' -f 2
+ step=20
++ echo 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=4.00675476147
++ echo 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=1.43362938564
+ echo 'step: 20, cat angle: 4.00675476147, cat radius: 0.71681469282, mouse_radius: 1.43362938564'
+ [[ 0 == 2 ]]
+ [[ 0 == 1 ]]
+ [[ 0 == 0 ]]
++ next_step 0 20 4.00675476147 0.71681469282 1.43362938564 20
++ local state=0
++ local -i step=20
++ local old_cat_angle=4.00675476147
++ local old_cat_radius=0.71681469282
++ local old_mouse_angle=1.43362938564
++ local -i max_steps=20
++ local new_cat_angle=4.00675476147
++ local new_cat_radius=0.71681469282
++ local new_mouse_angle=1.43362938564
++ ((  0 != 0  ))
++ does_cat_see_mouse 4.00675476147 0.71681469282 1.43362938564
++ local catA=4.00675476147
++ local catL=0.71681469282
++ local mouseA=1.43362938564
+++ bashcalc '1 <= 0.71681469282 * c(4.00675476147 - 1.43362938564)'
+++ echo '1 <= 0.71681469282 * c(4.00675476147 - 1.43362938564)'
+++ bc -l
++ test 0 -eq 1
+++ updateCatA 4.00675476147 0.71681469282
+++ local catA=4.00675476147
+++ local catL=0.71681469282
++++ bashcalc '4.00675476147 - 1.25 / 0.71681469282'
++++ echo '4.00675476147 - 1.25 / 0.71681469282'
++++ bc -l
+++ catA=2.26292889891351267747
++++ angle_reduce 2.26292889891351267747
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(2.26292889891351267747)))'
+++ catA=2.26292889891
+++ echo 2.26292889891
++ new_cat_angle=2.26292889891
++ is_caught 4.00675476147 1.43362938564 2.26292889891 0.71681469282
++ local A=4.00675476147
++ local B=1.43362938564
++ local C=2.26292889891
++ local catL=0.71681469282
+++ bashcalc 'c(1.43362938564 - 4.00675476147) > c(2.26292889891 - 4.00675476147) && c(2.26292889891 - 1.43362938564) > c(2.26292889891 - 4.00675476147) && 0.71681469282 == 1'
+++ echo 'c(1.43362938564 - 4.00675476147) > c(2.26292889891 - 4.00675476147) && c(2.26292889891 - 1.43362938564) > c(2.26292889891 - 4.00675476147) && 0.71681469282 == 1'
+++ bc -l
++ test 0 -eq 1
+++ updateMouseA 1.43362938564
+++ local mouseA=1.43362938564
++++ bashcalc '1.43362938564 - 1'
++++ echo '1.43362938564 - 1'
++++ bc -l
+++ mouseA=.43362938564
++++ angle_reduce .43362938564
++++ python -c 'import angles, sys; sys.stdout.write(str(angles.r2r(.43362938564)))'
+++ mouseA=0.43362938564
+++ echo 0.43362938564
++ new_mouse_angle=0.43362938564
++ [[ 20 == 20 ]]
++ state=1
++ step=21
++ echo 1 21 2.26292889891 0.71681469282 0.43362938564 20
++ return 1
+ res='1 21 2.26292889891 0.71681469282 0.43362938564 20'
++ echo 1 21 2.26292889891 0.71681469282 0.43362938564 20
++ cut -d ' ' -f 1
+ state=1
++ echo 1 21 2.26292889891 0.71681469282 0.43362938564 20
++ cut -d ' ' -f 2
+ step=21
++ echo 1 21 2.26292889891 0.71681469282 0.43362938564 20
++ cut -d ' ' -f 3
+ cat_angle=2.26292889891
++ echo 1 21 2.26292889891 0.71681469282 0.43362938564 20
++ cut -d ' ' -f 4
+ cat_radius=0.71681469282
++ echo 1 21 2.26292889891 0.71681469282 0.43362938564 20
++ cut -d ' ' -f 5
+ mouse_radius=0.43362938564
+ echo 'step: 21, cat angle: 2.26292889891, cat radius: 0.71681469282, mouse_radius: 0.43362938564'
+ [[ 1 == 2 ]]
+ [[ 1 == 1 ]]
+ echo 'Give up'
+ exit 0
